[gd_scene load_steps=18 format=2]

[ext_resource path="res://Object/Entity/GroundedEnemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/ensquir-sheet.png" type="Texture" id=2]

[sub_resource type="GDScript" id=30]
script/source = "extends \"res://Object/Entity/GroundedEnemy.tscn::1\"

const PROJECTILE := preload(\"res://Object/Enemy/Nut.tscn\") #
var can_attack: bool = true

var knockback_dir: int

func _patrol_state(_delta):
	if dir==0:
		dir = randi()%2-1
	Animation.play(\"run\")
	GroundParticles.emitting = true
	GroundParticles.direction.x =  2 * dir
	GroundParticles.position.x = 6 * dir
	_move_lr()
	_move_and_slide()
	_handle_oneway_platforms()
	_apply_gravity(_delta)
	_handle_away()
	
	$AwayTimer.stop()
		
	if $WallCollider.is_colliding(): # || !$WallCollider/NoWallCollider.is_colliding():
		dir = -dir
		$WallCollider.scale.y = -dir
#
#	$NutWallCollider.enabled = abs(player.position.x - position.x) <= 450 && abs(player.position.y - position.y) <= 20
	if player:
		if position.distance_to(player.position) <= 400: #$NutWallCollider.enabled && (!$NutWallCollider.is_colliding() || $NutWallCollider.get_collider()==player):
			GroundParticles.emitting = false
			current_state = Consts.ALERT

func _alert_state(_delta):
	if Animation.current_animation!=\"attack\" && can_attack:
		Animation.play(\"attack\")
	_move_lr()
	if fliped_to_player == dir: velocity.x = 0
	else: 
		dir = fliped_to_player
		$WallCollider.scale.y = -dir
	_move_and_slide()
	_handle_oneway_platforms()
	_apply_gravity(_delta)
	
	#if !( abs(player.position.x - position.x) <= 450 && abs(player.position.y - position.y) <= 20):
	if position.distance_to(player.position) > 400: #$NutWallCollider.enabled && (!$NutWallCollider.is_colliding() || $NutWallCollider.get_collider()==player):
		current_state = Consts.PATROL
#	if $NutWallCollider.is_colliding() && $NutWallCollider.get_collider()!=player:
#		current_state = Consts.PATROL

func _move_lr(boost: bool = false):
	if !_is_player() && ((abs(dir)>=1) || abs(dir )> abs(run_speed / pscale)):
		Sprite.flip_h = dir > 0
	velocity.x = 2*run_speed * -dir if boost else run_speed * -dir
	if has_node(\"Attack1\"):
		get_node(\"Attack1\").scale.x = -1 if Sprite.flip_h else 1
	$NutWallCollider.rotation_degrees = 90 if fliped_to_player>0 else -90

func _on_AnimationPlayer_animation_started(anim_name):
	if anim_name==\"attack\":
		$NutCooldown.start()

func _on_NutCooldown_timeout():
	var projectile_inst = PROJECTILE.instance()
	projectile_inst.position = Vector2(position.x,position.y-5*pscale)
	projectile_inst.vertical = rand_range(1,1.3)
	projectile_inst.dir = -rand_range(1.5,3) if Sprite.flip_h else rand_range(1.5,3)
	get_parent().add_child(projectile_inst)
	can_attack = false
	$AttackCooldown.start()

func _on_AttackCooldown_timeout():
	can_attack = true
	
func _on_Hitbox_area_entered(area):
	$Hitbox/CollisionShape2D.scale = Vector2(.01,.01)
	var body = area.get_parent()
	if body.is_in_group(\"Player\"):
		if body.vunerable: 
			Global.player_life -= 1
			body.knockback = 300*sign(body.position.x - position.x) if sign(body.position.x - position.x) else 300
			body.vunerable = false
	# inimigo atravessa a parede que limita (q serve para que o jogador não entre na room e ja de cara encoste num
	# inimigo que está longe do ponto inicial) quando está perseguindo o jogador
	# pode acarretar num bug em que ele nao consegue voltar ao ponto de origem, oq é \"contornado\" com _handle_away()
	if area.is_in_group(\"EnemyInvisibleWall\"):
		if current_state==Consts.ALERT:
			pass_through_invwall = area.get_parent()
			pass_through_invwall.collision_layer = 0
	if area.is_in_group(\"Enemy\"):
		dir = -dir
		$WallCollider.scale.y = -dir

# override -- higher knockback
func _hurt_state(_delta):
	if Animation.current_animation!=\"hurt\":
		knockback_dir = 1
	if is_on_wall(): knockback_dir = -1
	Animation.play(\"hurt\")
	velocity.x = knockback*1.5*knockback_dir
	
	if is_on_floor():
		velocity.y = -knockback/3
	_move_and_slide()
	_apply_gravity(_delta)
"

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

render_mode blend_mix;
uniform vec4 modulate: hint_color;

void fragment() {
	COLOR = vec4(modulate.rgb, texture(TEXTURE, UV).a * modulate.a);
}
"

[sub_resource type="ShaderMaterial" id=31]
shader = SubResource( 7 )
shader_param/modulate = Color( 0, 0, 0, 1 )

[sub_resource type="Animation" id=45]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("NutWallCollider:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -89.9996 ]
}

[sub_resource type="Animation" id=46]
resource_name = "attack"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 3, 4, 5, 3 ]
}

[sub_resource type="Animation" id=47]
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}

[sub_resource type="Animation" id=48]
resource_name = "climb1"
length = 0.533
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.13, 0.26, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15 ]
}

[sub_resource type="Animation" id=49]
resource_name = "dash"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 6 ]
}

[sub_resource type="Animation" id=50]
resource_name = "dashup"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}

[sub_resource type="Animation" id=51]
resource_name = "fall"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}

[sub_resource type="Animation" id=52]
resource_name = "hurt"
length = 0.3
step = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 2,
"values": [ Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=53]
resource_name = "idle"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=54]
resource_name = "jump"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}

[sub_resource type="Animation" id=55]
resource_name = "run"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("NutWallCollider:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 90.0, 180.0, 270.0 ]
}

[sub_resource type="CapsuleShape2D" id=44]
radius = 27.4286

[node name="EnSquirMaster" instance=ExtResource( 1 )]
scale = Vector2( 1.75, 1.75 )
script = SubResource( 30 )
run_speed = 320
life_max = 18.0

[node name="SpriteSheet" parent="." index="0"]
material = SubResource( 31 )
position = Vector2( 3.57628e-07, -64 )
texture = ExtResource( 2 )
hframes = 3
vframes = 3

[node name="AnimationPlayer" parent="." index="1"]
playback_speed = 1.5
anims/RESET = SubResource( 45 )
anims/attack = SubResource( 46 )
anims/climb = SubResource( 47 )
anims/climb1 = SubResource( 48 )
anims/dash = SubResource( 49 )
anims/dashup = SubResource( 50 )
anims/fall = SubResource( 51 )
anims/hurt = SubResource( 52 )
anims/idle = SubResource( 53 )
anims/jump = SubResource( 54 )
anims/run = SubResource( 55 )

[node name="CollisionShape2D" parent="." index="2"]
position = Vector2( 0, -16 )

[node name="ActionArea" parent="." index="5"]
visible = false

[node name="CollisionShape2D" parent="Hitbox" index="0"]
shape = SubResource( 44 )

[node name="CollisionShape2D" parent="Hurtbox" index="0"]
shape = SubResource( 44 )

[node name="WallCollider" parent="." index="8"]
cast_to = Vector2( 0, 30 )

[node name="NoWallCollider" parent="WallCollider" index="0"]
position = Vector2( -29.9999, 24.0001 )

[node name="OWPDetect" parent="." index="9"]
visible = false

[node name="NutWallCollider" type="RayCast2D" parent="." index="11"]
position = Vector2( 0, -32 )
rotation = -1.57079
enabled = true
cast_to = Vector2( 0, 450 )
collision_mask = 68

[node name="NutCooldown" type="Timer" parent="." index="12"]
wait_time = 0.15
one_shot = true

[node name="AttackCooldown" type="Timer" parent="." index="13"]
wait_time = 0.75
one_shot = true

[connection signal="animation_started" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_started"]
[connection signal="timeout" from="NutCooldown" to="." method="_on_NutCooldown_timeout"]
[connection signal="timeout" from="AttackCooldown" to="." method="_on_AttackCooldown_timeout"]

[editable path="Hitbox"]
[editable path="Hurtbox"]
