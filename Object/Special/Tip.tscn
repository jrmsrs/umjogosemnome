[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/PressStart2P.ttf" type="DynamicFontData" id=1]

[sub_resource type="GDScript" id=302]
script/source = "extends Area2D

enum _enum { MOVE, JUMP, ATTACK1, WHIP, HOLD_JUMP, ATTACK2, CLIMB, DASH, EXCARROT, WALL_JUMP, DOUBLE_JUMP, ELEVATOR }

export(_enum) var type
export var oneshot = false
var text: String = \"\"

func _ready():
	match(type): 
		# destroi no inicio do jogo quando não é mais relevante
		_enum.MOVE: if Global.progress.intro2: queue_free()
		_enum.JUMP: if Global.progress.intro2: queue_free()
		_enum.ATTACK1: if Global.progress.intro2: queue_free()
		_enum.WHIP: if Global.progress.presentation2: queue_free()
		_enum.HOLD_JUMP: if Global.progress.presentation2: queue_free()
		_enum.ATTACK2: if Global.progress.presentation2: queue_free()
		_enum.CLIMB: if Global.progress.presentation2: queue_free()
		_enum.DASH: if Global.dash_UNLOCKED: queue_free()
		_enum.EXCARROT: if Global.excarrot_UNLOCKED: queue_free()
		_enum.WALL_JUMP: if Global.wjump_UNLOCKED: queue_free()
		_enum.DOUBLE_JUMP: if Global.djump_UNLOCKED: queue_free()

func _process(delta):
	$CanvasLayer/TextLabel.bbcode_text=text

func _on_Area2D_body_entered(body):
	match(type):
		_enum.MOVE: text=\"[center]A - D: Move\\nMouse: Aim\"
		_enum.JUMP: text=\"[center]W: jump\"
		_enum.ATTACK1: text=\"[center]MB Left: Primary Attack\"
		_enum.WHIP: text=\"[center]Aim direciona ataques\"
		_enum.HOLD_JUMP: text=\"[center]Hold W: Long Jump\"
		_enum.ATTACK2: text=\"[center]MB Right: Secondary Attack\"
		_enum.CLIMB: text=\"[center]E: Climb Hopes/Stairs\"
		_enum.DASH: text=\"[center]Space(+A/D): Dash\"
		_enum.EXCARROT: text=\"[center]Secondary Attack lida com blocos destrutivos\"
		_enum.WALL_JUMP: text=\"[center]Jump while sliding: Wall Jump\"
		_enum.DOUBLE_JUMP: text=\"[center]Jump while on air: Double Jump\"
		_enum.ELEVATOR: 
			# Tip mostra que elevador foi liberado a cada 2 rats capturados, se nao nao mostra nada
			if Global.progress.rats%2==0:
				text=\"[center]Elevador nivel \"+ str(Global.progress.rats/2) +\" desbloqueado\"

func _on_Tip_body_exited(body):
	# Se for do tipo elevador a mensagem é uma informação e nao apaga de imediato
	if type == _enum.ELEVATOR: 
		$DestroyTimer.start(3)
	else:
		text = \"\"
		$DestroyTimer.start(60)

func _on_DestroyTimer_timeout():
	queue_free()
"

[sub_resource type="DynamicFont" id=279]
size = 40
font_data = ExtResource( 1 )

[node name="Tip" type="Area2D"]
collision_layer = 0
monitorable = false
script = SubResource( 302 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TextLabel" type="RichTextLabel" parent="CanvasLayer"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -640.0
margin_top = 241.0
margin_right = 640.0
margin_bottom = 323.0
custom_fonts/normal_font = SubResource( 279 )
bbcode_enabled = true
bbcode_text = "[center]A - D: Move
Mouse: Aim"
text = "A - D: Move
Mouse: Aim"
fit_content_height = true
__meta__ = {
"_editor_description_": ""
}

[node name="DestroyTimer" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[connection signal="body_entered" from="." to="." method="_on_Area2D_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_Tip_body_exited"]
[connection signal="timeout" from="DestroyTimer" to="." method="_on_DestroyTimer_timeout"]
