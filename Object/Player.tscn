[gd_scene load_steps=57 format=2]

[ext_resource path="res://Object/Entity/Grounded.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/pix.png" type="Texture" id=2]
[ext_resource path="res://assets/18861-radial_gradient.png" type="Texture" id=3]
[ext_resource path="res://assets/playerswd2.png" type="Texture" id=4]
[ext_resource path="res://Object/Helpers/Hurtbox.tscn" type="PackedScene" id=5]
[ext_resource path="res://Object/Camera2D.tscn" type="PackedScene" id=6]
[ext_resource path="res://assets/player.png" type="Texture" id=7]
[ext_resource path="res://assets/player_attack.png" type="Texture" id=8]
[ext_resource path="res://assets/playerpa.png" type="Texture" id=9]
[ext_resource path="res://assets/mcursor.png" type="Texture" id=10]

[sub_resource type="GDScript" id=2]
script/source = "extends \"res://Object/Entity/Grounded.tscn::16\"

const PROJECTILE := preload(\"res://Object/Carrot.tscn\")

var dash: bool
var dash_counter: int = 0
var dash_dir: int = 0

var djump: bool = false
var jump_counter: int = 0
var can_jump: bool = true

onready var Hurtbox = $Hurtbox
var owp = null

onready var origin_run_speed = run_speed
onready var origin_jump_force = jump_force

var vunerable: bool = true

# Helper vars
var _moving_through_diagonal_wall: bool

var angleaim: float

onready var DashParticles = $DashParticles
onready var GroundWallParticles = $GroundWallParticles

enum axis {LEFTX, LEFTY, RIGHTX, RIGHTY}

var controller: bool = false

func _ready(): 
	Global.player=self
	if Global.first_position:
		Global.checkpoint = position
		Global.soft_checkpoint = position
		Global.first_position = false
	$Attack1/Sprite.visible = false
	$Attack1/CollisionShape2D.disabled = true
	$Aim.queue_free()

func _physics_process(delta):
	var axis1_dir = Vector2(-Input.get_joy_axis(0,axis.LEFTX),-Input.get_joy_axis(0,axis.LEFTY))
	if axis1_dir!=Vector2.ZERO:
		$Axis1.visible=false#Global.DEBUG
		$Axis1.rotation = Vector2(0,0).angle_to_point(axis1_dir)
		#get_viewport().warp_mouse($Axis1/Sprite.get_global_transform_with_canvas().origin)
		controller = true
		$ControllerTimer.start()
	else: $Axis1.visible=false
	if controller: get_viewport().warp_mouse($Axis1/Sprite.get_global_transform_with_canvas().origin)
	var axis2_dir = Vector2(-Input.get_joy_axis(0,axis.RIGHTX),-Input.get_joy_axis(0,axis.RIGHTY))
	if axis2_dir!=Vector2.ZERO:
		$Axis2.visible=Global.debug
		$Axis2.rotation = Vector2(0,0).angle_to_point(axis2_dir)
		get_viewport().warp_mouse($Axis2/Sprite.get_global_transform_with_canvas().origin)
	else: $Axis2.visible=Global.debug
	
	run_speed = origin_run_speed if Global.whip_UNLOCKED else origin_run_speed*.75
	jump_force = origin_jump_force if Global.whip_UNLOCKED else origin_jump_force*.8
	dir = Input.get_action_strength('game_left') - Input.get_action_strength('game_right')
	vdir = Input.get_action_strength('game_up') - Input.get_action_strength('game_down')
	jump = Input.is_action_just_pressed(\"game_jump\")
	dash = Input.is_action_just_pressed(\"game_dash\") 
	action = Input.is_action_just_pressed(\"game_action\")
	
	if action: 
		action_buffer = true
	if action_buffer: 
		$ActionArea/ActionBuffer.start()
	if !vunerable:
		$AnimInvincible.play(\"inv\")
	else:
		$AnimInvincible.play(\"RESET\")
	
	_moving_through_diagonal_wall = is_on_wall() && abs(velocity.x)>1
	
	if is_on_floor() || _moving_through_diagonal_wall || current_state==Consts.WALLSLIDE:
		Global.player_out = false
		$CoyoteTimer.start()
		can_jump = true
		jump_counter = 1 if Global.djump_UNLOCKED else 0
		dash_counter = 1 if Global.dash_UNLOCKED else 0
	match current_state:
		Consts.ATTACK:
			_attack1_state(delta)
		Consts.ATTACK2:
			_attack2_state(delta)
		Consts.DASH:
			_dash_state(delta)
		Consts.BOOSTJUMP:
			_jump_state(delta, true)
		Consts.BOOSTFALL:
			_fall_state(delta, true)
		Consts.WALLSLIDE:
			_wslide_state(delta)
			
		Consts.PRESENTATION:
			_cuts_presentation(delta)
		Consts.CINFALL:
			_cinematic_fall_state(delta)
	_limit_vspeed()
	_handle_action_objects()
	
# States
func _idle_state(_delta):
	Animation.play(\"idle\")
	$GroundParticles.emitting=false
	_move_and_slide()
	_apply_gravity(_delta)
	_flip_player()
	
	if owp && Input.is_action_just_pressed(\"game_down\"):
		owp.get_node(\"CollisionShape2D\").disabled = true
		action=true
	
	velocity.x=0
	
	if dir:
		current_state = Consts.RUN
	if jump:
		current_state = Consts.JUMP
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if velocity.y!=0 and !is_on_floor():
		current_state = Consts.FALL
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if Input.is_action_just_pressed(\"game_attack2\") && Global.carrot>0:
		GroundParticles.emitting = false
		current_state = Consts.ATTACK2
	if knockback:
		current_state = Consts.HURT

func _run_state(_delta):
	Animation.play(\"run\")
	Animation.playback_speed = 1 if Global.whip_UNLOCKED else 0.7
	GroundParticles.emitting = true
	GroundParticles.gravity.y = 12 if Global.whip_UNLOCKED else 9
	GroundParticles.direction.x = 2 * dir
	GroundParticles.position.x = (GroundParticles.gravity.y/2) * dir
	_move_lr()
	_move_and_slide()
	_apply_gravity(_delta)
	_flip_player()
	
	if !dir:
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.IDLE
	if jump:
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.JUMP
	if dash && dash_counter>0:
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.DASH
	if velocity.y>0 and !is_on_floor():
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.FALL
	if Input.is_action_just_pressed(\"game_attack1\"):
#		GroundParticles.gravity.y = 12
#		GroundParticles.emitting = false
		current_state = Consts.ATTACK
	if Input.is_action_just_pressed(\"game_attack2\") && Global.carrot>0:
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.ATTACK2
	if knockback:
		GroundParticles.gravity.y = 12
		GroundParticles.emitting = false
		current_state = Consts.HURT

func _jump_state(_delta, boost: bool = false):
	var walljump = Animation.current_animation == \"wallslide\"
	if boost && abs(dir) < 0.5: current_state = Consts.JUMP
	if Animation.current_animation != \"jump\": 
		_generate_jump_particles(walljump)
	Animation.play(\"jump\")
	boost = boost && abs(dir) > 0.5
	GroundParticles.emitting = false
	DashParticles.emitting = boost
	
	_handle_jump()
	
	if walljump:
		velocity.x = 500*dir
	else:
		_move_lr(boost)
	_move_and_slide()
	_apply_gravity(_delta)
	_flip_player()
	
	if _moving_through_diagonal_wall:
		current_state = Consts.RUN
	if velocity.y >= 0:
		current_state = Consts.BOOSTFALL if boost else Consts.FALL
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if knockback:
		current_state = Consts.HURT

func _fall_state(_delta, boost: bool = false):
	if boost && abs(dir) < 0.5: current_state = Consts.FALL
	Animation.play(\"fall\")
	GroundParticles.emitting = false
	DashParticles.emitting = boost
	_move_lr(boost)
	_move_and_slide()
	_apply_gravity(_delta)
	_flip_player()
	
	if _moving_through_diagonal_wall:
		current_state = Consts.RUN
	if is_on_floor():
		current_state = Consts.IDLE
		GroundParticles.emitting = false
		DashParticles.emitting = false
	if dir!=0 && is_on_wall() && Global.wjump_UNLOCKED:
		current_state = Consts.WALLSLIDE
		GroundParticles.emitting = false
		DashParticles.emitting = false
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if jump && can_jump:
		current_state = Consts.JUMP 
	if jump && jump_counter>0:
		djump = true
		current_state = Consts.BOOSTJUMP if boost else Consts.JUMP
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if knockback:
		current_state = Consts.HURT

func _attack1_state(_delta):
	$Attack1/Sprite.visible = true
	GroundParticles.emitting = abs(velocity.x) > 10
	$Attack1/Animation.play(\"whip\" if Global.whip_UNLOCKED else \"shovel\")
	# Animation.play(\"attack\")
	if velocity.y>=0 and !is_on_floor():
		Animation.play(\"attack_fall\")
	elif velocity.y<=0 and !is_on_floor():
		Animation.play(\"attack_jump\")
	elif dir:
		Animation.play(\"attack_run\")
	else:
		Animation.play(\"attack\")
	
	if dash && dash_counter>0:
		current_state = Consts.DASH
		$Attack1/Sprite.visible = false
	if jump && can_jump:
		_handle_jump()
	if jump && jump_counter>0:
		djump = true
		_handle_jump()
	
	if $Attack1/CollisionShape2D.disabled:
		var ppos = Vector2(position.x,position.y-40)
		var angle = ppos.angle_to_point(get_global_mouse_position())
		var flip_shove = deg2rad(-20) if Sprite.flip_h else deg2rad(200)
		var flip_whip = deg2rad(0) if Sprite.flip_h else deg2rad(180)
		$Attack1.rotation = ppos.angle_to_point(get_global_mouse_position()) + flip_whip if Global.whip_UNLOCKED else ppos.angle_to_point(get_global_mouse_position()) + flip_shove
	
	_move_lr()
	_move_and_slide()
	_apply_gravity(_delta)
	
	if knockback:
		GroundParticles.emitting = false
		$Attack1/Sprite.visible = false
		Animation.play(\"RESET\")
		current_state = Consts.HURT

func _attack2_state(_delta):
	if Global.carrot_UNLOCKED:
		if !Animation.current_animation == \"attack2\":
			Global.carrot -= 1
			var projectile_inst = PROJECTILE.instance()
			get_parent().add_child(projectile_inst)
			projectile_inst.position = Vector2(position.x,position.y-5*pscale)
			var projectile_dir = Vector2(position.x,position.y-40).direction_to(get_global_mouse_position())
			projectile_inst.launch(Vector2(projectile_dir.x*1200, projectile_dir.y*1500))
		Animation.play(\"attack2\")
		velocity.x=0
		_move_and_slide()
		_apply_gravity(_delta)
		
		if knockback:
			Animation.stop()
			current_state = Consts.HURT
	else: current_state = Consts.IDLE

func _dash_state(_delta):
	# Se est√° no chao e usa dash sem direcionais, desvia saltando para tras
	if dir==0 && !Animation.current_animation==\"dashup\" && is_on_floor():
		_generate_jump_particles()
		velocity.y-=400
	if !(Animation.current_animation==\"dash\" || Animation.current_animation==\"dashup\"):
		dash_dir = dir
		if is_on_floor(): Animation.play(\"dash\" if dash_dir!=0 else \"dashup\")
		else: Animation.play(\"dash\")
	dash_counter-=1
	GroundParticles.emitting = abs(velocity.x)>10 && dash_dir!=0
	DashParticles.emitting = Animation.current_animation==\"dash\"
	if velocity.y!=0:
		DashParticles.gravity.y = -velocity.y * .15
	knockback=0
	
	if dash_dir<0:
		velocity.x = run_speed * 4
		DashParticles.direction.x = -2
		DashParticles.position.x = 16
	elif dash_dir>0: 
		velocity.x = -run_speed * 4
		DashParticles.direction.x = 2
		DashParticles.position.x = -16
	else:
		if is_on_floor(): 
			velocity.x = run_speed * 2 if Sprite.flip_h else -run_speed * 2
		elif Animation.current_animation == \"dash\":
			velocity.x = -run_speed * 4 if Sprite.flip_h else run_speed * 4
		DashParticles.direction.x = -2 * sign(velocity.x)
		DashParticles.position.x = 16 * sign(velocity.x)
	if Animation.current_animation==\"dash\": velocity.y = 0
	_move_and_slide()
	
	collision_layer = 64 #7
	collision_mask = 64
	if jump && can_jump:
		current_state = Consts.BOOSTJUMP
		collision_layer = 65 #1,7
		collision_mask = 65

func _wslide_state(_delta):
	if Animation.current_animation!=\"wallslide\":
		Animation.play(\"wallslide\")
	GroundParticles.emitting = false
	_move_lr()
	_move_and_slide()
	_apply_gravity(_delta,.3)
	Sprite.flip_h = dir>0
	
	GroundWallParticles.emitting = true
	GroundWallParticles.direction.x = 1 * dir
	GroundWallParticles.position.x = -8 * dir
	
	if !is_on_wall() || dir==0:
		current_state = Consts.FALL
		GroundWallParticles.emitting = false
	if _moving_through_diagonal_wall:
		current_state = Consts.RUN
		GroundWallParticles.emitting = false
	if is_on_floor():
		current_state = Consts.IDLE
		GroundParticles.emitting = false
		GroundWallParticles.emitting = false
	if dash && dash_counter>0:
		current_state = Consts.DASH
		GroundWallParticles.emitting = false
	if jump && can_jump:
		current_state = Consts.JUMP 
		GroundWallParticles.emitting = false
	if knockback:
		current_state = Consts.HURT
		GroundWallParticles.emitting = false

func _climb_state(delta):
	if !Animation.current_animation == \"climb1\":
		position.y-=1
		action=false
	Animation.play(\"climb1\")
	if abs(velocity.y)>1:
		Animation.playback_speed = 1
	else:
		Animation.playback_speed = 0
	_move_ud()
	_move_and_slide()
	
	if action || is_on_floor(): 
		action_buffer = false
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if dash:
		action_buffer = false
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if !current_action_area: 
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if knockback:
		Animation.playback_speed = 1
		action_buffer = false
		current_state = Consts.IDLE

func _hurt_state(_delta):
	$Invincible.start(.7)
	Animation.play(\"hurt\")
	velocity.x = knockback
	if is_on_floor():
		velocity.y = -knockback/3
	_move_and_slide()
	_apply_gravity(_delta)
	
func _generate_jump_particles(walljumping=false):
	var particles: Node2D = CPUParticles2D.new()
	particles.position = position if !walljumping else Vector2(position.x-16*dir,position.y-20)
	particles.amount = 7
	particles.lifetime = 2 if !walljumping else 1.5
	particles.speed_scale = 6
	particles.explosiveness = 0.5
	particles.emission_shape = CPUParticles2D.EMISSION_SHAPE_RECTANGLE
	particles.emission_rect_extents = Vector2(24,5) if !walljumping else Vector2(10,10)
	particles.direction = Vector2(0 if !walljumping else 1*dir,-1)
	particles.spread = 45.37
	particles.gravity = Vector2(0,25)
	particles.initial_velocity = 35.52 if !walljumping else 50
	particles.initial_velocity_random = .05
	particles.angular_velocity = 1
	particles.angle = 720
	particles.angle_random = 1
	particles.scale_amount = 8
	particles.scale_amount_curve = $GroundParticles.scale_amount_curve
	particles.color = Color(0,0,0,.3) if can_jump else Color(1,1,1,.3) 
	particles.one_shot = true
	get_parent().add_child(particles)

func _handle_jump():
	if is_on_floor() || _moving_through_diagonal_wall || can_jump:
		can_jump = false
		velocity.y = jump_force
	elif Input.is_action_just_released(\"game_jump\") and velocity.y < jump_force*0.1:
		velocity.y = jump_force * 0.1
	elif djump: 
		velocity.y = jump_force
		djump = false
		jump_counter-=1

func _handle_life():
	if Global.player_life <= 0:
		Global.paused = Global.INHARD
func _is_player(): 
	return true
func _flip_player():
	if controller:
		var player_axis_diff = $Axis1/Sprite.get_global_transform_with_canvas()[2].x-get_global_transform_with_canvas()[2].x
		if player_axis_diff>0:
			Sprite.flip_h = false
		if player_axis_diff<0:
			Sprite.flip_h = true
	else: Sprite.flip_h = get_local_mouse_position().x<0

# Signals
func _on_AnimationPlayer_animation_finished(anim_name):
	if current_state == Consts.ATTACK2:
		current_state = Consts.IDLE
	if current_state == Consts.DASH:
		GroundParticles.emitting = is_on_floor()
		DashParticles.emitting = false
		if anim_name==\"dashup\": velocity.y=0
		current_state = Consts.IDLE
		collision_layer = 65
		collision_mask = 65
	if current_state == Consts.HURT:
		current_state = Consts.IDLE
		knockback = 0
func _on_AnimationPlayer_animation_started(anim_name):
	if anim_name==\"wallslide\": 
		velocity.y = 0
func _on_Animation_animation_finished(anim_name):
	if current_state == Consts.ATTACK:
		current_state = Consts.IDLE
		$Attack1/Sprite.visible = false
		$Attack1/Animation.stop()

func _on_CoyoteTimer_timeout():
	can_jump = false

func _on_SpikeCollider_area_entered(area):
	if area.is_in_group(\"Spike\"):
		Global.player_life-=1
		Global.paused = Global.INSOFT
		#position = Global.soft_checkpoint
		Global.player_out = true

func _on_OWPDetect_body_entered(body):
	if body.is_in_group(\"OneWayPlatform\"):
		owp = body

func _on_OWPDetect_body_exited(body):
	if body.is_in_group(\"OneWayPlatform\"):
		body.get_node(\"Timer\").start()

func _on_Attack1_body_entered(body):
	#if !is_on_floor():
		#velocity.y = -800
	pass
func _on_Attack1_area_entered(area):
	if !is_on_floor():
		if area.is_in_group(\"Enemy\") && (position.y -area.get_parent().position.y ) < -10 : 
			velocity.y = -800
		if area.is_in_group(\"EnemyProjectile\") && (position.y -area.get_parent().position.y ) < -10 : 
			velocity.y = -800
		if area.is_in_group(\"Spike\") && (position.y -area.position.y ) < -10 : 
			velocity.y = -800
	
func _on_Invincible_timeout():
	vunerable = true

func _cuts_presentation(_delta):
	Animation.playback_speed = 0.5
	Animation.play(\"run\")
	GroundParticles.emitting = false
	velocity.x = -run_speed /3
	_move_and_slide()
	_apply_gravity(_delta)

func _cinematic_fall_state(_delta):
	Animation.play(\"fall\")
	GroundParticles.emitting = false
	DashParticles.emitting = false
	_move_and_slide()
	_apply_gravity(_delta)
	_flip_player()
	
	if is_on_floor() && Global.progress.intro2:
		current_state = Consts.IDLE
		GroundParticles.emitting = false
		DashParticles.emitting = false

func _on_CinematicAreaCollider_area_entered(area):
	if area.is_in_group(\"Intro\"):
		if Global.carrot >= 12:
			Global.progress.intro1 = true
			velocity.x = 0
			current_state = Consts.CINFALL
			get_parent().get_node(\"NarrativeShit/Movie0/AnimationPlayer\").play(\"Movie\")
			get_parent().get_node(\"NarrativeShit/Movie0\").position.x = position.x
			get_parent().get_node(\"NarrativeShit/WellLock\").queue_free()
			get_parent().get_node(\"Level/OneWayPlatform\").get_node(\"OWPWell\").collision_layer = 0
			get_parent().get_node(\"Level/OneWayPlatform\").get_node(\"OWPWell\").collision_mask = 0
			area.queue_free()
	if area.is_in_group(\"Intro2\"):
		Global.progress.intro2 = true
		get_parent().get_node(\"Level/OneWayPlatform\").get_node(\"OWPWell\").collision_layer = 0
		get_parent().get_node(\"Level/OneWayPlatform\").get_node(\"OWPWell\").collision_mask = 1
		area.queue_free()
	if area.is_in_group(\"Presentation\"):
		Global.progress.presentation1 = true
		Sprite.flip_h = true
		current_state = Consts.PRESENTATION
		get_parent().get_node(\"NarrativeShit/Movie1-2/AnimationPlayer\").play(\"Movie\")
		get_parent().get_node(\"NPC\").get_node(\"CinematicMole\").ready = true
		
	if area.is_in_group(\"Presentation2\"):
		Global.progress.presentation2 = true
		get_parent().get_node(\"NarrativeShit\").get_node(\"CinematicBreakableBlocks\").queue_free()
		get_parent().get_node(\"NarrativeShit/Movie1\").get_node(\"AnimationPlayer\").play(\"Movie\")
		area.queue_free()
		current_state = Consts.CINFALL
		action = false
		action_buffer = action
		
func _on_CinematicAreaCollider_area_exited(area):
	if area.is_in_group(\"Presentation\"):
		current_state = Consts.IDLE
		Animation.playback_speed = 1
		get_parent().get_node(\"NPC\").get_node(\"CinematicMole\").queue_free()
		area.queue_free()
		#$CinematicAreaCollider.queue_free()

func _unhandled_key_input(event):
	if event.is_pressed(): controller=false

func _on_ControllerTimer_timeout():
	controller=false
"

[sub_resource type="Shader" id=32]
code = "shader_type canvas_item;

render_mode blend_mix;
uniform vec4 modulate: hint_color;

void fragment() {
	COLOR = vec4(modulate.rgb, texture(TEXTURE, UV).a * modulate.a);
}
"

[sub_resource type="ShaderMaterial" id=33]
shader = SubResource( 32 )
shader_param/modulate = Color( 0, 0, 0, 1 )

[sub_resource type="Animation" id=35]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=36]
resource_name = "attack"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=37]
resource_name = "attack2"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=47]
resource_name = "attack_fall"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=48]
resource_name = "attack_jump"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=49]
resource_name = "attack_run"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=38]
resource_name = "climb"
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=39]
resource_name = "climb1"
length = 0.533
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.13, 0.26, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=40]
resource_name = "dash"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=67]
resource_name = "dashown"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=41]
resource_name = "dashup"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=42]
resource_name = "fall"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=43]
resource_name = "hurt"
length = 0.15
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 2,
"values": [ Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=44]
resource_name = "idle"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=45]
resource_name = "jump"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=46]
resource_name = "run"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=55]
resource_name = "wallslide"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 18 ]
}

[sub_resource type="CapsuleShape2D" id=9]
radius = 16.0
height = 34.0

[sub_resource type="Animation" id=52]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=53]
resource_name = "inv"
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 16, 40 )

[sub_resource type="RectangleShape2D" id=18]
extents = Vector2( 16, 40 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 56, 10 )

[sub_resource type="GDScript" id=61]
script/source = "extends Area2D

func _process(delta):
	$RigidBody2D/CollisionShape2D.disabled = $CollisionShape2D.disabled
"

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Attack1:z_index")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Attack1/Sprite:offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Attack1/Sprite:region_enabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Attack1/Sprite:region_rect")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Attack1/Sprite:texture")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 9 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("Attack1/CollisionShape2D:shape:extents")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 56, 10 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Attack1/CollisionShape2D:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 92, 0 ) ]
}

[sub_resource type="Animation" id=54]
resource_name = "shovel"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Attack1/Sprite:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 9 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Attack1/CollisionShape2D:shape:extents")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 60, 30 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Attack1/CollisionShape2D:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 92, 24 ) ]
}

[sub_resource type="Animation" id=50]
resource_name = "sword (copy)"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -75.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}

[sub_resource type="Animation" id=51]
resource_name = "sword (copy) (copy)"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 75.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}

[sub_resource type="Animation" id=34]
resource_name = "sword_up"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 4, 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 2,
"values": [ -90.0, -90.0, -90.0, -120.0, -165.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.15, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 2,
"values": [ Vector2( 64, -86 ), Vector2( 22, -120 ), Vector2( -62, -124 ), Vector2( 32, 25 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "whip"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Attack1/Sprite:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 4 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Attack1/CollisionShape2D:shape:extents")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 56, 10 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Attack1/CollisionShape2D:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 92, 0 ) ]
}

[sub_resource type="RectangleShape2D" id=62]
extents = Vector2( 16, 60 )

[sub_resource type="Curve" id=7]
_data = [ Vector2( 0.00429185, 0.351136 ), 0.0, 0.0, 0, 0, Vector2( 0.497854, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.987124, 0.0602273 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.018018, 1 )
colors = PoolColorArray( 0, 0, 0, 0.490196, 1, 1, 1, 0 )

[sub_resource type="RectangleShape2D" id=30]
extents = Vector2( 24, 40 )

[sub_resource type="Curve" id=56]
_data = [ Vector2( 0.00429185, 0.351136 ), 0.0, 0.0, 0, 0, Vector2( 0.497854, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.987124, 0.0602273 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=58]
offsets = PoolRealArray( 0, 0.385542, 1 )
colors = PoolColorArray( 0, 0, 0, 0.372549, 0.644578, 0.644578, 0.644578, 0.372549, 1, 1, 1, 0.372549 )

[sub_resource type="Curve" id=57]
_data = [ Vector2( 0.00429185, 0.351136 ), 0.0, 0.0, 0, 0, Vector2( 0.497854, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.987124, 0.0602273 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Animation" id=59]
resource_name = "Anim"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2, 1.7, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=60]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=63]
resource_name = "Anim"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2, 1.7, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=64]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=65]
resource_name = "Anim"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2, 1.7, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=66]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[node name="Player" groups=["Player"] instance=ExtResource( 1 )]
collision_layer = 65
collision_mask = 65
script = SubResource( 2 )
jump_force = -880

[node name="SpriteSheet" parent="." index="0"]
material = SubResource( 33 )

[node name="AnimationPlayer" parent="." index="1"]
anims/RESET = SubResource( 35 )
anims/attack = SubResource( 36 )
anims/attack2 = SubResource( 37 )
anims/attack_fall = SubResource( 47 )
anims/attack_jump = SubResource( 48 )
anims/attack_run = SubResource( 49 )
anims/climb = SubResource( 38 )
anims/climb1 = SubResource( 39 )
anims/dash = SubResource( 40 )
anims/dashown = SubResource( 67 )
anims/dashup = SubResource( 41 )
anims/fall = SubResource( 42 )
anims/hurt = SubResource( 43 )
anims/idle = SubResource( 44 )
anims/jump = SubResource( 45 )
anims/run = SubResource( 46 )
anims/wallslide = SubResource( 55 )

[node name="CollisionShape2D" parent="." index="2"]
shape = SubResource( 9 )

[node name="AnimInvincible" type="AnimationPlayer" parent="." index="4"]
anims/RESET = SubResource( 52 )
anims/inv = SubResource( 53 )

[node name="Camera2D" parent="." index="5" instance=ExtResource( 6 )]

[node name="Bg" type="Node2D" parent="." index="6"]

[node name="Green" type="Sprite" parent="Bg" index="0"]
visible = false
modulate = Color( 0.360784, 1, 0.729412, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Blue" type="Sprite" parent="Bg" index="1"]
visible = false
modulate = Color( 0.682353, 0.843137, 1, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Red" type="Sprite" parent="Bg" index="2"]
visible = false
modulate = Color( 0.992157, 0.627451, 0.627451, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Orange" type="Sprite" parent="Bg" index="3"]
visible = false
modulate = Color( 0.992157, 0.87451, 0.627451, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Purple" type="Sprite" parent="Bg" index="4"]
visible = false
modulate = Color( 0.768627, 0.627451, 0.992157, 1 )
position = Vector2( 0, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Light2D2" type="Light2D" parent="." index="7"]
position = Vector2( 0, -49 )
texture = ExtResource( 3 )
energy = 0.3
shadow_enabled = true
shadow_gradient_length = 10.0
shadow_filter = 1
shadow_filter_smooth = 25.1

[node name="MapAreaCollider" type="Area2D" parent="." index="8"]
visible = false
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="MapAreaCollider" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 3 )

[node name="CinematicAreaCollider" type="Area2D" parent="." index="9"]
visible = false
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="CinematicAreaCollider" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 3 )

[node name="SpikeCollider" type="Area2D" parent="." index="10"]
visible = false
collision_layer = 0
collision_mask = 8
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="SpikeCollider" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 18 )

[node name="Node2D" type="Node2D" parent="." index="11"]
visible = false
position = Vector2( 8, -52 )
rotation = 1.26885

[node name="CollisionShape2D" type="CollisionShape2D" parent="Node2D" index="0"]
position = Vector2( 88, -1 )
shape = SubResource( 4 )

[node name="Sprite" type="Sprite" parent="Node2D" index="1"]
position = Vector2( -24, -12 )
scale = Vector2( 8, 8 )
texture = ExtResource( 4 )
vframes = 8

[node name="Attack1" type="Area2D" parent="." index="12" groups=["PlayerSword"]]
z_index = -1
collision_layer = 32
collision_mask = 36
script = SubResource( 61 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="Attack1" index="0"]
position = Vector2( 92, 0 )
shape = SubResource( 4 )

[node name="Animation" type="AnimationPlayer" parent="Attack1" index="1"]
root_node = NodePath("../..")
anims/RESET = SubResource( 5 )
anims/shovel = SubResource( 54 )
"anims/sword (copy)" = SubResource( 50 )
"anims/sword (copy) (copy)" = SubResource( 51 )
anims/sword_up = SubResource( 34 )
anims/whip = SubResource( 6 )

[node name="Sprite" type="Sprite" parent="Attack1" index="2"]
position = Vector2( 0, -12 )
scale = Vector2( 8, 8 )
z_index = 1
texture = ExtResource( 9 )
vframes = 8

[node name="RigidBody2D" type="RigidBody2D" parent="Attack1" index="3"]
collision_layer = 32
collision_mask = 32
mode = 1
applied_force = Vector2( -5000, 0 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Attack1/RigidBody2D" index="0"]
position = Vector2( 92, 9.05991e-06 )
rotation = 1.57079
shape = SubResource( 62 )

[node name="CoyoteTimer" type="Timer" parent="." index="13"]
wait_time = 0.15
one_shot = true

[node name="DashParticles" type="CPUParticles2D" parent="." index="14"]
position = Vector2( 16, -48 )
scale = Vector2( 6, 1 )
emitting = false
amount = 18
lifetime = 1.3
speed_scale = 4.0
emission_shape = 2
emission_rect_extents = Vector2( 2, 48 )
direction = Vector2( -2, 0 )
spread = 0.0
gravity = Vector2( 0, 0 )
initial_velocity = 35.52
initial_velocity_random = 0.05
angular_velocity = 1.0
scale_amount = 10.0
scale_amount_curve = SubResource( 7 )
color_ramp = SubResource( 8 )

[node name="ActionArea" parent="." index="16"]
visible = false

[node name="Hurtbox" parent="." index="17" groups=["Player"] instance=ExtResource( 5 )]
collision_layer = 16
monitoring = false
monitorable = true

[node name="CollisionShape2D" parent="Hurtbox" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 30 )

[node name="Invincible" type="Timer" parent="." index="18"]

[node name="VisibilityEnabler2D" parent="." index="20"]
pause_animations = false
freeze_bodies = false
pause_particles = false
pause_animated_sprites = false
process_parent = false
physics_process_parent = false

[node name="GroundWallParticles" type="CPUParticles2D" parent="." index="21"]
position = Vector2( 8, -47 )
emitting = false
amount = 3
lifetime = 2.0
speed_scale = 6.0
emission_shape = 2
emission_rect_extents = Vector2( 0, 40 )
direction = Vector2( -1, -4 )
spread = 0.0
gravity = Vector2( 0, 12 )
initial_velocity = 35.52
initial_velocity_random = 0.05
angular_velocity = 1.0
angle = 720.0
angle_random = 1.0
scale_amount = 8.0
scale_amount_curve = SubResource( 56 )
color_ramp = SubResource( 58 )

[node name="WallJumpParticles" type="CPUParticles2D" parent="." index="22"]
emitting = false
amount = 6
lifetime = 2.0
one_shot = true
speed_scale = 6.0
explosiveness = 1.0
emission_shape = 2
emission_rect_extents = Vector2( 24, 5 )
direction = Vector2( 0, -1 )
spread = 45.37
gravity = Vector2( 0, 12 )
initial_velocity = 35.52
initial_velocity_random = 0.05
angular_velocity = 1.0
angle = 720.0
angle_random = 1.0
scale_amount = 8.0
scale_amount_curve = SubResource( 57 )
color = Color( 0, 0, 0, 0.372549 )

[node name="Aim" type="Node2D" parent="." index="23"]
position = Vector2( 0, -48 )
scale = Vector2( 8, 8 )

[node name="Sprite" type="Sprite" parent="Aim" index="0"]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 10, -4.76837e-07 )
rotation = 2.35619
texture = ExtResource( 10 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Aim" index="1"]
autoplay = "Anim"
anims/Anim = SubResource( 59 )
anims/RESET = SubResource( 60 )

[node name="Axis1" type="Node2D" parent="." index="24"]
position = Vector2( 0, -48 )
scale = Vector2( 8, 8 )

[node name="Sprite" type="Sprite" parent="Axis1" index="0"]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 12.125, -4.76837e-07 )
rotation = 2.35619
texture = ExtResource( 10 )
centered = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="Axis1" index="1"]
autoplay = "Anim"
anims/Anim = SubResource( 63 )
anims/RESET = SubResource( 64 )

[node name="Axis2" type="Node2D" parent="." index="25"]
position = Vector2( 0, -48 )
scale = Vector2( 8, 8 )

[node name="Sprite" type="Sprite" parent="Axis2" index="0"]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 150, 0 )
rotation = 2.35619
texture = ExtResource( 10 )
centered = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="Axis2" index="1"]
autoplay = "Anim"
anims/Anim = SubResource( 65 )
anims/RESET = SubResource( 66 )

[node name="ControllerTimer" type="Timer" parent="." index="26"]
wait_time = 15.0
one_shot = true
autostart = true

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="animation_started" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_started"]
[connection signal="area_entered" from="MapAreaCollider" to="Camera2D" method="_on_MapAreaCollider_area_entered"]
[connection signal="area_entered" from="CinematicAreaCollider" to="." method="_on_CinematicAreaCollider_area_entered"]
[connection signal="area_exited" from="CinematicAreaCollider" to="." method="_on_CinematicAreaCollider_area_exited"]
[connection signal="area_entered" from="SpikeCollider" to="." method="_on_SpikeCollider_area_entered"]
[connection signal="area_entered" from="Attack1" to="." method="_on_Attack1_area_entered"]
[connection signal="body_entered" from="Attack1" to="." method="_on_Attack1_body_entered"]
[connection signal="animation_finished" from="Attack1/Animation" to="." method="_on_Animation_animation_finished"]
[connection signal="timeout" from="CoyoteTimer" to="." method="_on_CoyoteTimer_timeout"]
[connection signal="timeout" from="Invincible" to="." method="_on_Invincible_timeout"]
[connection signal="body_entered" from="OWPDetect" to="." method="_on_OWPDetect_body_entered"]
[connection signal="body_exited" from="OWPDetect" to="." method="_on_OWPDetect_body_exited"]
[connection signal="timeout" from="ControllerTimer" to="." method="_on_ControllerTimer_timeout"]

[editable path="Hurtbox"]
