[gd_scene load_steps=14 format=2]

[ext_resource path="res://Object/Entity/Object.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/checkpoint.png" type="Texture" id=2]
[ext_resource path="res://Object/Helpers/Hurtbox.tscn" type="PackedScene" id=3]
[ext_resource path="res://Object/Transition.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Object/Entity/Object.tscn::16\"

var active: bool = Global.checkpoint == position #true
var spawned: bool = false
var reuse: bool = false
var healing: bool = false
var heal_buffer: float
onready var camera = get_parent().get_parent().get_parent().get_node(\"Player/Camera2D\")

func _ready():
	$CanvasLayer/Transition.material.set_shader_param(\"progress\",0)
	spawned = Vector2(abs(position.x-Global.checkpoint.x),abs(position.y-Global.checkpoint.y)) < Vector2(100,100)
	if spawned:
		current_state = Consts.IDLE
	else:
		if active:
			current_state = Consts.ACTIVE
		else:
			$AnimationPlayer.play(\"RESET\")
			current_state = Consts.INACTIVE

func _physics_process(delta):
	match(current_state):
		Consts.INACTIVE:
			$AnimationPlayer.play(\"inactive\")
		Consts.ACTIVE:
			if active:
				$AnimationPlayer.play(\"restore\")
			else:
				$AnimationPlayer.play(\"active\")
		Consts.IDLE:
			$AnimationPlayer.play(\"Idle\")
	if healing:
		#foca camera no player
		#var camera = get_parent().get_parent().get_parent().get_node(\"Player/Camera2D\")
		#camera.offset_h = 0
		#camera.offset_v = -0.5
			
		heal_buffer = min(heal_buffer+delta,Global.player_life_max)
		Global.player_life = int(heal_buffer)
		if Global.carrot<5: Global.carrot = min(Global.carrot+delta*2,5)
	else:
		$CanvasLayer/Transition.material.set_shader_param(\"progress\",0)

func _on_Hurtbox_body_entered(body):
	if body.is_in_group(\"Player\"): 
		spawned = Vector2(abs(position.x-Global.checkpoint.x),abs(position.y-Global.checkpoint.y)) < Vector2(100,100)
		active = spawned
		
		_set_player_pos()
		camera.can_set_offset=false
		if reuse:
			current_state = Consts.ACTIVE
		else:
			current_state = Consts.ACTIVE if !spawned else Consts.IDLE
		heal_buffer = Global.player_life
		healing = true

func _on_Hurtbox_body_exited(body):
	if body.is_in_group(\"Player\"): 
		camera.can_set_offset=true
		reuse = true
		if active:
			current_state = Consts.IDLE
		else:
			current_state = Consts.INACTIVE
		healing = false

func _on_AnimationPlayer_animation_finished(anim_name):
	if current_state == Consts.ACTIVE:
		active=true
		current_state = Consts.IDLE
		Global.checkpoint = get_parent().get_parent().get_parent().get_node(\"Player\").position
		Global.soft_checkpoint = Global.checkpoint
		get_tree().reload_current_scene()

func _set_player_pos():
	var player_pos = get_parent().get_parent().get_parent().get_node(\"Player\").get_global_transform_with_canvas().origin

	player_pos = Vector2((camera.offset_h+1)/2, abs(camera.offset_v-0.5)/2)
	$CanvasLayer/Transition.material.set_shader_param(\"center\",player_pos)
"

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;

uniform float screen_width = 1920;
uniform float screen_height = 1080;
uniform vec2 center = vec2(0.5f);
uniform vec2 player = vec2(0.5f);

uniform float progress : hint_range(0,1);
uniform float pixel_size = 24f;
uniform float circle_size : hint_range(0,2) = 1.5f;
uniform float curtains : hint_range(0,1) = 1f;

uniform int type : hint_range(0,4) = 0;

void fragment() {
	//Tipo Diamante Pixel
	if (type == 0) {
		float xFraction = fract(FRAGCOORD.x / pixel_size);
		float yFraction = fract(FRAGCOORD.y / pixel_size);
		
		float xDistance = abs(xFraction - 0.5);
		float yDistance = abs(yFraction - 0.5);

		if (xDistance + yDistance + UV.x + UV.y > progress * 4f) {
			discard;
		}
	}
	//Tipo Circulo no player
	else if (type == 1) {
		float ratio = screen_width / screen_height;
		if (distance(player, vec2(mix(player.x, UV.x, ratio), UV.y)) < circle_size * (1.0 - progress)) {
			COLOR.a = 0f;
		}
	}
	//Tipo Circulo no Centro
	else if (type == 2) {
		float ratio = screen_width / screen_height;
		if (distance(center, vec2(mix(center.x, UV.x, ratio), UV.y)) < circle_size * (1.0 - progress)) {
			COLOR.a = 0f;
		}
	}
	//Tipo Corte Vertical
	else if (type == 3) {
		if (distance(vec2(0.5, 0.5), vec2(UV.x, UV.x)) < curtains * (1.0 - progress)) {
			COLOR.a = 0f;
		}
	}
	//Tipo Corte Horizontal
	else if (type == 4) {
		if (distance(center, vec2(UV.y, UV.y)) < curtains * (1.0 - progress)) {
			COLOR.a = 0f;
		}
	}
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/screen_width = 1920.0
shader_param/screen_height = 1080.0
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/player = Vector2( 0.5, 0.5 )
shader_param/progress = 0.0
shader_param/pixel_size = 24.0
shader_param/circle_size = 1.5
shader_param/curtains = 1.0
shader_param/type = 4

[sub_resource type="Animation" id=7]
resource_name = "Idle"
length = 0.6
loop = true
step = 0.025
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet/Sprite3:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -6, 0 ), Vector2( -5, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet/Sprite2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 6, 0 ), Vector2( 5, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet/Sprite1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -9 ), Vector2( 0, -6 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SpriteSheet/Sprite2:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.025, 0.3, 0.325 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 2, 0, 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("SpriteSheet/Sprite3:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.05, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 3, 2 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("SpriteSheet:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=8]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet/Sprite3:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -5, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet/Sprite2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet/Sprite1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -6 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SpriteSheet/Sprite2:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("SpriteSheet/Sprite3:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.25 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("SpriteSheet:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0.470588 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("CanvasLayer/Transition:material:shader_param/progress")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("CanvasLayer/Transition:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=9]
resource_name = "active"
length = 0.65
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet/Sprite3:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -6, 1 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, -1 ), Vector2( -2, 0 ), Vector2( -3, 1 ), Vector2( -5, 0 ), Vector2( -4, 0 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, 2 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, 0 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -6, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet/Sprite2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 6, 1 ), Vector2( 3, 0 ), Vector2( 5, 1 ), Vector2( 4, 0 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, 0 ), Vector2( 2, 1 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, 0 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, -2 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 6, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet/Sprite1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( 0, -3 ), Vector2( 0, -2 ), Vector2( 2, -5 ), Vector2( 0, -4 ), Vector2( 0, -3 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( 1, -3 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( -1, -3 ), Vector2( 0, -2 ), Vector2( 0, -9 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SpriteSheet/Sprite2:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.025, 0.65, 0.675 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 2, 3, 2 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("SpriteSheet/Sprite3:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.05, 0.65, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 0, 1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.25 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("SpriteSheet:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0.225, 0.65 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("CanvasLayer/Transition:material:shader_param/progress")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.15, 0.4, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.5, 0.65, 1.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("CanvasLayer/Transition:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 0.65 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=10]
resource_name = "inactive"
length = 0.6
loop = true
step = 0.025
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet/Sprite3:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -5, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet/Sprite2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet/Sprite1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SpriteSheet/Sprite2:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("SpriteSheet/Sprite3:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 2 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("SpriteSheet:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.35, 0.45, 0.55 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0.470588 ), Color( 0, 0, 0, 0.470588 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 0.470588 ) ]
}

[sub_resource type="Animation" id=11]
resource_name = "restore"
length = 0.65
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet/Sprite3:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -6, 1 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, -1 ), Vector2( -2, 0 ), Vector2( -3, 1 ), Vector2( -5, 0 ), Vector2( -4, 0 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, 2 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -5, 0 ), Vector2( -4, 0 ), Vector2( -2, 0 ), Vector2( -3, 0 ), Vector2( -6, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet/Sprite2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 6, 1 ), Vector2( 3, 0 ), Vector2( 5, 1 ), Vector2( 4, 0 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, 0 ), Vector2( 2, 1 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, 0 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 5, 0 ), Vector2( 4, -2 ), Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 6, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet/Sprite1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.15, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.425, 0.45, 0.475, 0.5, 0.525, 0.55, 0.575, 0.6, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( 0, -3 ), Vector2( 0, -2 ), Vector2( 2, -5 ), Vector2( 0, -4 ), Vector2( 0, -3 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( 1, -3 ), Vector2( 0, -2 ), Vector2( 0, -5 ), Vector2( 0, -4 ), Vector2( -1, -3 ), Vector2( 0, -2 ), Vector2( 0, -9 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SpriteSheet/Sprite2:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.025, 0.65, 0.675 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 2, 3, 2 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("SpriteSheet/Sprite3:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.05, 0.65, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 0, 1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.25 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("SpriteSheet:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("CanvasLayer/Transition:material:shader_param/progress")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.15, 0.4, 0.65 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.5, 0.65, 1.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("CanvasLayer/Transition:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 0.65 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 40, 40 )

[node name="Checkpoint" instance=ExtResource( 1 )]
collision_layer = 0
script = SubResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="." index="0"]
layer = 2

[node name="Transition" parent="CanvasLayer" index="0" instance=ExtResource( 4 )]
material = SubResource( 13 )

[node name="SpriteSheet" parent="." index="1"]
modulate = Color( 0, 0, 0, 0.470588 )
position = Vector2( 0, -32 )
hframes = 4
vframes = 1

[node name="Sprite1" type="Sprite" parent="SpriteSheet" index="0"]
position = Vector2( 0, -6 )
texture = ExtResource( 2 )
hframes = 5
frame = 4

[node name="Sprite2" type="Sprite" parent="SpriteSheet" index="1"]
position = Vector2( 5, 0 )
texture = ExtResource( 2 )
hframes = 5

[node name="Sprite3" type="Sprite" parent="SpriteSheet" index="2"]
position = Vector2( -5, 0 )
texture = ExtResource( 2 )
hframes = 5

[node name="AnimationPlayer" parent="." index="2"]
playback_speed = 0.25
anims/Idle = SubResource( 7 )
anims/RESET = SubResource( 8 )
anims/active = SubResource( 9 )
anims/inactive = SubResource( 10 )
anims/restore = SubResource( 11 )

[node name="CollisionShape2D" parent="." index="3"]
position = Vector2( 0, -36 )

[node name="Hurtbox" parent="." index="5" instance=ExtResource( 3 )]
position = Vector2( 0, 8 )
collision_mask = 96

[node name="CollisionShape2D" parent="Hurtbox" index="0"]
position = Vector2( 0, -48 )
shape = SubResource( 6 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="body_entered" from="Hurtbox" to="." method="_on_Hurtbox_body_entered"]
[connection signal="body_exited" from="Hurtbox" to="." method="_on_Hurtbox_body_exited"]

[editable path="Hurtbox"]
