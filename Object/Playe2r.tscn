[gd_scene load_steps=41 format=2]

[ext_resource path="res://Object/Entity/Grounded.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/pix.png" type="Texture" id=2]
[ext_resource path="res://assets/18861-radial_gradient.png" type="Texture" id=3]
[ext_resource path="res://Object/Helpers/Hurtbox.tscn" type="PackedScene" id=5]
[ext_resource path="res://Object/Camera2D.tscn" type="PackedScene" id=6]
[ext_resource path="res://assets/player.png" type="Texture" id=7]
[ext_resource path="res://assets/player_attack.png" type="Texture" id=8]
[ext_resource path="res://assets/playerpa.png" type="Texture" id=9]

[sub_resource type="GDScript" id=2]
script/source = "extends \"res://Object/Entity/Grounded.tscn::16\"

const PROJECTILE := preload(\"res://Object/Carrot.tscn\")

var dash_UNLOCKED: bool = false
var dash: bool
var dash_counter: int = 0

var djump_UNLOCKED: bool = false
var djump: bool = false
var jump_counter: int = 0
var can_jump: bool = true

onready var Hurtbox = $Hurtbox
var owp = null

var vunerable: bool = true

# Helper vars
var _moving_through_diagonal_wall: bool

onready var DashParticles = $DashParticles

func _ready(): 
	Global.soft_checkpoint = position
	life_max = Global.player_life_max
	life = life_max
	$Attack1/Sprite.visible = false
	$Attack1/CollisionShape2D.disabled = true

func _physics_process(delta):
	print(current_state)
	Global.player_life = life
	dir = Input.get_action_strength('game_left') - Input.get_action_strength('game_right')
	vdir = Input.get_action_strength('game_up') - Input.get_action_strength('game_down')
	jump = Input.is_action_just_pressed(\"game_jump\")
	dash = Input.is_action_just_pressed(\"game_dash\") 
	action = Input.is_action_just_pressed(\"game_action\")
	if action: 
		action_buffer = true
	if action_buffer: 
		$ActionArea/ActionBuffer.start()
	if !vunerable:
		$AnimInvincible.play(\"inv\")
	else:
		$AnimInvincible.play(\"RESET\")
	
	_moving_through_diagonal_wall = is_on_wall() && abs(velocity.x)>1
	
	scale.x = -1 if get_local_mouse_position().x<0 else 1
	
	if is_on_floor() || _moving_through_diagonal_wall:
		Global.player_out = false
		$CoyoteTimer.start()
		can_jump = true
		jump_counter = 1 if djump_UNLOCKED else 0
		dash_counter = 1 if dash_UNLOCKED else 0
	match current_state:
		Consts.ATTACK:
			_attack1_state(delta)
		Consts.ATTACK2:
			_attack2_state(delta)
		Consts.DASH:
			_dash_state(delta)
		Consts.BOOSTJUMP:
			_jump_state(delta, true)
		Consts.BOOSTFALL:
			_fall_state(delta, true)
	_limit_vspeed()
	_handle_action_objects()
	
# States
func _idle_state(_delta):
	Animation.play(\"idle\")
	_move_and_slide()
	_apply_gravity(_delta)
	
	if owp && Input.is_action_just_pressed(\"game_down\"):
		owp.get_node(\"CollisionShape2D\").disabled = true
		action=true
	
	velocity.x=0
	
	if dir:
		current_state = Consts.RUN
	if jump:
		current_state = Consts.JUMP
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if velocity.y!=0 and !is_on_floor():
		current_state = Consts.FALL
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if Input.is_action_just_pressed(\"game_attack2\") && Global.carrot>0:
		GroundParticles.emitting = false
		current_state = Consts.ATTACK2
	if knockback:
		current_state = Consts.HURT

func _run_state(_delta):
	Animation.play(\"run\")
	GroundParticles.emitting = true
	GroundParticles.direction.x =  2 * dir
	GroundParticles.position.x = 6 * dir
	_move_lr()
	_move_and_slide()
	_apply_gravity(_delta)
	
	if !dir:
		GroundParticles.emitting = false
		current_state = Consts.IDLE
	if jump:
		GroundParticles.emitting = false
		current_state = Consts.JUMP
	if dash && dash_counter>0:
		GroundParticles.emitting = false
		current_state = Consts.DASH
	if velocity.y>0 and !is_on_floor():
		GroundParticles.emitting = false
		current_state = Consts.FALL
	if Input.is_action_just_pressed(\"game_attack1\"):
		GroundParticles.emitting = false
		current_state = Consts.ATTACK
	if Input.is_action_just_pressed(\"game_attack2\") && Global.carrot>0:
		GroundParticles.emitting = false
		current_state = Consts.ATTACK2
	if knockback:
		GroundParticles.emitting = false
		current_state = Consts.HURT

func _jump_state(_delta, boost: bool = false):
	if boost && abs(dir) < 0.5: current_state = Consts.JUMP
	Animation.play(\"jump\")
	boost = boost && abs(dir) > 0.5
	GroundParticles.emitting = false
	DashParticles.emitting = boost
	if is_on_floor() || can_jump:
		can_jump = false
		velocity.y = jump_force
	elif Input.is_action_just_released(\"game_jump\") and velocity.y < jump_force*0.1:
		velocity.y = jump_force * 0.1
	elif djump: 
		velocity.y = jump_force
		djump = false
		jump_counter-=1
	_move_lr(boost)
	_move_and_slide()
	_apply_gravity(_delta)
	
	if _moving_through_diagonal_wall:
		current_state = Consts.RUN
	if velocity.y >= 0:
		current_state = Consts.BOOSTFALL if boost else Consts.FALL
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if knockback:
		current_state = Consts.HURT

func _fall_state(_delta, boost: bool = false):
	if boost && abs(dir) < 0.5: current_state = Consts.FALL
	Animation.play(\"fall\")
	GroundParticles.emitting = false
	DashParticles.emitting = boost
	_move_lr(boost)
	_move_and_slide()
	_apply_gravity(_delta)
	
	if _moving_through_diagonal_wall:
		current_state = Consts.RUN
	if is_on_floor():
		current_state = Consts.IDLE
		GroundParticles.emitting = false
		DashParticles.emitting = false
	if dash && dash_counter>0:
		current_state = Consts.DASH
	if jump && can_jump:
		current_state = Consts.JUMP 
	if jump && jump_counter>0:
		djump = true
		current_state = Consts.BOOSTJUMP if boost else Consts.JUMP
	if Input.is_action_just_pressed(\"game_attack1\"):
		current_state = Consts.ATTACK
	if knockback:
		current_state = Consts.HURT

func _attack1_state(_delta):
	# Animation.play(\"attack\")
	if velocity.y>=0 and !is_on_floor():
		Animation.play(\"attack_fall\")
	elif velocity.y<=0 and !is_on_floor():
		Animation.play(\"attack_jump\")
	elif dir:
		Animation.play(\"attack_run\")
	else:
		Animation.play(\"attack\")
	
	if dash && dash_counter>0:
		current_state = Consts.DASH
	
	$Attack1/Sprite.visible = true
	$Attack1/Animation.play(\"sword\")
	
	if $Attack1/CollisionShape2D.disabled:
		var angle = Vector2(position.x,position.y-40).angle_to_point(get_global_mouse_position())
		if ( angle > -1.5 && angle < 1.5 ):
			$Attack1.rotation_degrees = -60* Vector2(position.x,position.y-40).angle_to_point(get_global_mouse_position()) + 20
		else:
			$Attack1.rotation_degrees = 60* Vector2(position.x,position.y-40).angle_to_point(get_global_mouse_position()) +180 + 20
	
	_move_lr()
	_move_and_slide()
	_apply_gravity(_delta)
	
	if knockback:
		Animation.play(\"RESET\")
		current_state = Consts.HURT

func _attack2_state(_delta):
	if !Animation.current_animation == \"attack2\":
		Global.carrot -= 1
		var projectile_inst = PROJECTILE.instance()
		get_parent().add_child(projectile_inst)
		projectile_inst.position = Vector2(position.x,position.y-5*pscale)
		var projectile_dir = Vector2(position.x,position.y-40).direction_to(get_global_mouse_position())
		projectile_inst.launch(Vector2(projectile_dir.x*1200, projectile_dir.y*1500))
	Animation.play(\"attack2\")
	velocity.x=0
	_move_and_slide()
	_apply_gravity(_delta)
	
	if knockback:
		Animation.stop()
		current_state = Consts.HURT

func _dash_state(_delta):
	dash_counter-=1
	Animation.play(\"dash\")
	
	GroundParticles.emitting = abs(velocity.x)>10
	DashParticles.emitting = abs(velocity.x)>10
	DashParticles.position.x = -16 if dir>0 else 16
	DashParticles.direction.x = 2 if dir>0 else -2
	if velocity.y!=0:
		DashParticles.gravity.y = -velocity.y * .15
	knockback=0
	
	if dir<=0:
		velocity.x = run_speed * 4
	else: 
		velocity.x = -run_speed * 4
	velocity.y = 0
	_move_and_slide()
	
	collision_layer = 64 #7
	collision_mask = 64
	if jump && can_jump:
		current_state = Consts.BOOSTJUMP
		collision_layer = 65 #1,7
		collision_mask = 65

func _climb_state(delta):
	if !Animation.current_animation == \"climb1\":
		position.y-=1
		action=false
	Animation.play(\"climb1\")
	if abs(velocity.y)>1:
		Animation.playback_speed = 1
	else:
		Animation.playback_speed = 0
	_move_ud()
	_move_and_slide()
	
	if action || is_on_floor(): 
		action_buffer = false
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if dash:
		action_buffer = false
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if !current_action_area: 
		Animation.playback_speed = 1
		current_state = Consts.IDLE
	if knockback:
		Animation.playback_speed = 1
		action_buffer = false
		current_state = Consts.IDLE

func _hurt_state(_delta):
	$Invincible.start(2)
	Animation.play(\"hurt\")
	velocity.x = knockback
	if is_on_floor():
		velocity.y = -knockback/3
	_move_and_slide()
	_apply_gravity(_delta)

func _handle_life():
	if life<=0:
		Global.paused = Global.INHARD
		#get_tree().reload_current_scene()
func _is_player(): 
	return true

# Signals
func _on_AnimationPlayer_animation_finished(anim_name):
	if current_state == Consts.ATTACK2:
		current_state = Consts.IDLE
	if current_state == Consts.DASH:
		GroundParticles.emitting = is_on_floor()
		DashParticles.emitting = false
		current_state = Consts.IDLE
		collision_layer = 65
		collision_mask = 65
	if current_state == Consts.HURT:
		current_state = Consts.IDLE
		knockback = 0
func _on_Animation_animation_finished(anim_name):
	if current_state == Consts.ATTACK:
		current_state = Consts.IDLE
		$Attack1/Sprite.visible = false
		$Attack1/Animation.stop()

func _on_CoyoteTimer_timeout():
	can_jump = false

func _on_SpikeCollider_area_entered(area):
	if area.is_in_group(\"Spike\"):
		life-=1
		Global.paused = Global.INSOFT
		#position = Global.soft_checkpoint
		Global.player_out = true

func _on_OWPDetect_body_entered(body):
	if body.is_in_group(\"OneWayPlatform\"):
		owp = body

func _on_OWPDetect_body_exited(body):
	if body.is_in_group(\"OneWayPlatform\"):
		body.get_node(\"Timer\").start()

func _on_Attack1_body_entered(body):
	#if !is_on_floor():
		#velocity.y = -800
	pass
func _on_Attack1_area_entered(area):
	if !is_on_floor():
		if area.is_in_group(\"Enemy\") && (position.y -area.get_parent().position.y ) < -10 : 
			velocity.y = -800
		if area.is_in_group(\"Spike\") && (position.y -area.position.y ) < -10 : 
			velocity.y = -800
	
func _on_Invincible_timeout():
	vunerable = true
"

[sub_resource type="Shader" id=32]
code = "shader_type canvas_item;

render_mode blend_mix;
uniform vec4 modulate: hint_color;

void fragment() {
	COLOR = vec4(modulate.rgb, texture(TEXTURE, UV).a * modulate.a);
}
"

[sub_resource type="ShaderMaterial" id=33]
shader = SubResource( 32 )
shader_param/modulate = Color( 0, 0, 0, 1 )

[sub_resource type="Animation" id=35]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=36]
resource_name = "attack"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=37]
resource_name = "attack2"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=47]
resource_name = "attack_fall"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=48]
resource_name = "attack_jump"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=49]
resource_name = "attack_run"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 8 ), ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=38]
resource_name = "climb"
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=39]
resource_name = "climb1"
length = 0.533
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.13, 0.26, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=40]
resource_name = "dash"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=41]
resource_name = "dashup"
length = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=42]
resource_name = "fall"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=43]
resource_name = "hurt"
length = 0.15
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 2,
"values": [ Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("SpriteSheet:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=44]
resource_name = "idle"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=45]
resource_name = "jump"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=46]
resource_name = "run"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SpriteSheet:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="CapsuleShape2D" id=9]
radius = 16.0
height = 34.0

[sub_resource type="Animation" id=52]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=53]
resource_name = "inv"
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("SpriteSheet:material:shader_param/modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 16, 40 )

[sub_resource type="RectangleShape2D" id=18]
extents = Vector2( 16, 40 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 56, 10 )

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Attack1:z_index")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Attack1/Sprite:offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Attack1/Sprite:region_enabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Attack1/Sprite:region_rect")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "sword"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}

[sub_resource type="Animation" id=50]
resource_name = "sword (copy)"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -75.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}

[sub_resource type="Animation" id=51]
resource_name = "sword (copy) (copy)"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 75.0, 75.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 8, -52 ), Vector2( -36, -20 ) ]
}

[sub_resource type="Animation" id=34]
resource_name = "sword_up"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Attack1/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 4, 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attack1/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attack1:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 2,
"values": [ -90.0, -90.0, -90.0, -120.0, -165.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Attack1:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.15, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 2,
"values": [ Vector2( 64, -86 ), Vector2( 22, -120 ), Vector2( -62, -124 ), Vector2( 32, 25 ) ]
}

[sub_resource type="Curve" id=7]
_data = [ Vector2( 0.00429185, 0.351136 ), 0.0, 0.0, 0, 0, Vector2( 0.497854, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.987124, 0.0602273 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.018018, 1 )
colors = PoolColorArray( 0, 0, 0, 0.490196, 1, 1, 1, 0 )

[sub_resource type="RectangleShape2D" id=30]
extents = Vector2( 24, 40 )

[node name="Player" groups=["Player"] instance=ExtResource( 1 )]
collision_layer = 65
collision_mask = 65
script = SubResource( 2 )

[node name="SpriteSheet" parent="." index="0"]
material = SubResource( 33 )

[node name="AnimationPlayer" parent="." index="1"]
anims/RESET = SubResource( 35 )
anims/attack = SubResource( 36 )
anims/attack2 = SubResource( 37 )
anims/attack_fall = SubResource( 47 )
anims/attack_jump = SubResource( 48 )
anims/attack_run = SubResource( 49 )
anims/climb = SubResource( 38 )
anims/climb1 = SubResource( 39 )
anims/dash = SubResource( 40 )
anims/dashup = SubResource( 41 )
anims/fall = SubResource( 42 )
anims/hurt = SubResource( 43 )
anims/idle = SubResource( 44 )
anims/jump = SubResource( 45 )
anims/run = SubResource( 46 )

[node name="CollisionShape2D" parent="." index="2"]
shape = SubResource( 9 )

[node name="AnimInvincible" type="AnimationPlayer" parent="." index="4"]
anims/RESET = SubResource( 52 )
anims/inv = SubResource( 53 )

[node name="Camera2D" parent="." index="5" instance=ExtResource( 6 )]

[node name="Bg" type="Node2D" parent="." index="6"]

[node name="Green" type="Sprite" parent="Bg" index="0"]
visible = false
modulate = Color( 0.360784, 1, 0.729412, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Blue" type="Sprite" parent="Bg" index="1"]
visible = false
modulate = Color( 0.682353, 0.843137, 1, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Red" type="Sprite" parent="Bg" index="2"]
visible = false
modulate = Color( 0.992157, 0.627451, 0.627451, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Orange" type="Sprite" parent="Bg" index="3"]
visible = false
modulate = Color( 0.992157, 0.87451, 0.627451, 1 )
position = Vector2( 7.62939e-06, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Purple" type="Sprite" parent="Bg" index="4"]
visible = false
modulate = Color( 0.768627, 0.627451, 0.992157, 1 )
position = Vector2( 0, -40 )
scale = Vector2( 42.5, 24.25 )
z_index = -20
texture = ExtResource( 2 )

[node name="Light2D2" type="Light2D" parent="." index="7"]
position = Vector2( 0, -49 )
texture = ExtResource( 3 )
energy = 0.3
shadow_enabled = true
shadow_gradient_length = 10.0
shadow_filter = 1
shadow_filter_smooth = 25.1

[node name="MapAreaCollider" type="Area2D" parent="." index="8"]
visible = false
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="MapAreaCollider" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 3 )

[node name="SpikeCollider" type="Area2D" parent="." index="9"]
visible = false
collision_layer = 0
collision_mask = 8
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="SpikeCollider" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 18 )

[node name="Attack1" type="Area2D" parent="." index="10" groups=["PlayerSword"]]
visible = false
z_index = -1
collision_layer = 32
collision_mask = 36
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="Attack1" index="0"]
position = Vector2( 88, -1 )
shape = SubResource( 4 )

[node name="Animation" type="AnimationPlayer" parent="Attack1" index="1"]
root_node = NodePath("../..")
anims/RESET = SubResource( 5 )
anims/sword = SubResource( 6 )
"anims/sword (copy)" = SubResource( 50 )
"anims/sword (copy) (copy)" = SubResource( 51 )
anims/sword_up = SubResource( 34 )

[node name="Sprite" type="Sprite" parent="Attack1" index="2"]
position = Vector2( 0, -12 )
scale = Vector2( 8, 8 )
z_index = 1
texture = ExtResource( 9 )
vframes = 8

[node name="CoyoteTimer" type="Timer" parent="." index="11"]
wait_time = 0.15
one_shot = true

[node name="DashParticles" type="CPUParticles2D" parent="." index="12"]
position = Vector2( 16, -48 )
scale = Vector2( 6, 1 )
emitting = false
amount = 18
lifetime = 1.3
speed_scale = 4.0
emission_shape = 2
emission_rect_extents = Vector2( 2, 48 )
direction = Vector2( -2, 0 )
spread = 0.0
gravity = Vector2( 0, 0 )
initial_velocity = 35.52
initial_velocity_random = 0.05
angular_velocity = 1.0
scale_amount = 10.0
scale_amount_curve = SubResource( 7 )
color_ramp = SubResource( 8 )

[node name="ActionArea" parent="." index="13"]
visible = false

[node name="RayCast2D" type="RayCast2D" parent="." index="15"]
position = Vector2( 0, 3 )
enabled = true
cast_to = Vector2( 0, 5 )

[node name="Hurtbox" parent="." index="16" instance=ExtResource( 5 )]
collision_layer = 16
monitoring = false
monitorable = true

[node name="CollisionShape2D" parent="Hurtbox" index="0"]
position = Vector2( 0, -40 )
shape = SubResource( 30 )

[node name="Invincible" type="Timer" parent="." index="17"]

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="area_entered" from="MapAreaCollider" to="Camera2D" method="_on_MapAreaCollider_area_entered"]
[connection signal="area_entered" from="SpikeCollider" to="." method="_on_SpikeCollider_area_entered"]
[connection signal="area_entered" from="Attack1" to="." method="_on_Attack1_area_entered"]
[connection signal="body_entered" from="Attack1" to="." method="_on_Attack1_body_entered"]
[connection signal="animation_finished" from="Attack1/Animation" to="." method="_on_Animation_animation_finished"]
[connection signal="timeout" from="CoyoteTimer" to="." method="_on_CoyoteTimer_timeout"]
[connection signal="body_entered" from="OWPDetect" to="." method="_on_OWPDetect_body_entered"]
[connection signal="body_exited" from="OWPDetect" to="." method="_on_OWPDetect_body_exited"]
[connection signal="timeout" from="Invincible" to="." method="_on_Invincible_timeout"]

[editable path="Hurtbox"]
